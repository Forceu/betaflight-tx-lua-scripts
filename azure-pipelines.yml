# Builds the Betaflight TX lua scripts.
#
# After building, artifacts are released to a seperate repository.
#
# Azure Pipelines requires the following extensions to be installed:
# - GitHub Tool: https://marketplace.visualstudio.com/items?itemName=marcelo-formentao.github-tools
#
# You'll also need to setup the follwing pipeline variables: 
#     "releaseNotes" - This is used to add the release notes in the windows job in the build stage so they can be published as part of the github release in the release stage
#     "endpoint" - The name of the github endpoint link setup in AzDo - setup when linking AzDo and GitHub
#     "owner" - The owner of the repository to release to e.g. betaflight
#     "repoName" - The name of the repository to release to e.g. betaflight-configurator-nightly

variables:
  owner: betaflight
  repoName: betaflight-tx-lua-scripts-nightlies
  releaseNotes: This is a nightly build off the tip of 'master'. It may be unstable and result in corrupted configurations or data loss. **Use only for testing.**

name: $(Date:yyyyMMdd).$(BuildID)

trigger:
  batch: true
  branches:
    include:
    - master

pr:
  drafts: false
  branches:
    include:
    - master
    - "*-maintenance"

stages:
- stage: Build
  jobs:
  - job: 'Linux'
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
    - script: sudo apt-get -y install lua5.2
      displayName: 'Install lua compiler.'
    - script: make release -C $(System.DefaultWorkingDirectory)
      displayName: 'Test and build the release.'
    - task: PublishPipelineArtifact@1
      displayName: 'Publish release'
      inputs: 
        artifactName: betaflight-tx-lua-scripts
        targetPath: '$(System.DefaultWorkingDirectory)/release'

- stage: Release
  jobs:
  - job: Release
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        targetPath: '$(Pipeline.Workspace)'
    - task: GitHubReleasePublish@1
      inputs:
        githubEndpoint: '$(endpoint)'
        manuallySetRepository: true
        githubOwner: '$(owner)'
        githubRepositoryName: '$(repoName)'
        githubReleaseNotes: |+
          $(releaseNotes)

          ### Changes:
          $(Build.SourceVersionMessage)
        githubReleaseDraft: false
        githubReleasePrerelease: false
        githubIgnoreAssets: false
        githubReleaseAsset: |
          $(Pipeline.Workspace)/betaflight-tx-lua-scripts/**
        githubReuseRelease: true
        githubReuseDraftOnly: true
        githubSkipDuplicatedAssets: false
        githubEditRelease: false
        githubDeleteEmptyTag: false
